sudo: false
language: cpp

compiler:
  - clang
  - g++
before_install:
  - pip install --user 'requests[security]'
  - pip install --user cpp-coveralls
install:
  - if [ "$CXX" = "g++" ]; then export COVERAGE=$COV; fi
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - liblua5.2-dev
    - libluajit-5.1-dev
    - libboost-all-dev
    - cmake
    - libffi-dev
    - libssl-dev
env:
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++03 LUALIB=lua5.2 KAGUYA_NO_USERDATA_TYPE_CHECK=0 COV=On
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++11 LUALIB=lua5.2 KAGUYA_NO_USERDATA_TYPE_CHECK=0 COV=On
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++03 LUALIB=luajit KAGUYA_NO_USERDATA_TYPE_CHECK=0 COV=On
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++11 LUALIB=luajit KAGUYA_NO_USERDATA_TYPE_CHECK=0 COV=On
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++03 LUALIB=lua5.2 KAGUYA_NO_USERDATA_TYPE_CHECK=1 COV=On
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++11 LUALIB=lua5.2 KAGUYA_NO_USERDATA_TYPE_CHECK=1 COV=On
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++03 LUALIB=luajit KAGUYA_NO_USERDATA_TYPE_CHECK=1 COV=On
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++11 LUALIB=luajit KAGUYA_NO_USERDATA_TYPE_CHECK=1 COV=On
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++03 LUALIB=lua5.2 KAGUYA_SINGLE_HEADER_VERSION=1
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++11 LUALIB=lua5.2 KAGUYA_SINGLE_HEADER_VERSION=1
script:
  - cmake . -DCOVERAGE=${COVERAGE} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DLUA_SEARCH_LIB_NAME=${LUALIB} -DKAGUYA_NO_USERDATA_TYPE_CHECK=${KAGUYA_NO_USERDATA_TYPE_CHECK} -DKAGUYA_SINGLE_HEADER_VERSION=${KAGUYA_SINGLE_HEADER_VERSION} && make && CTEST_OUTPUT_ON_FAILURE=1 make test
after_success: |

  if [ "$CXX" = "g++" ]; then
    export GCOV="gcov"
  fi
  if [ -n "$GCOV" ] && [ -n "$COVERAGE" ]; then
    coveralls --gcov ${GCOV} --exclude test --exclude examples --exclude benchmark --exclude single_include --gcov-options '\-lp'
  fi
